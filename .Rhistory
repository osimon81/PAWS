col_y <- max(col_y) - col_y
col_savgol_x <- pracma::savgol(as.numeric(col_x), fl = savgol_window_length, forder = 3, dorder = 0)
col_savgol_x[1:(savgol_window_length*savgol_filter_smoothing_multiplier)] <- col_savgol_x[(savgol_window_length*savgol_filter_smoothing_multiplier)]
col_savgol_x[(length(col_savgol_x) - savgol_window_length*savgol_filter_smoothing_multiplier):length(col_savgol_x)] <- col_savgol_x[length(col_savgol_x) - savgol_window_length*savgol_filter_smoothing_multiplier]
col_savgol_y <- pracma::savgol(as.numeric(col_y), fl = savgol_window_length, forder = 3, dorder = 0)
col_savgol_y[1:(savgol_window_length*savgol_filter_smoothing_multiplier)] <- col_savgol_y[(savgol_window_length*savgol_filter_smoothing_multiplier)]
col_savgol_y[(length(col_savgol_y) - savgol_window_length*savgol_filter_smoothing_multiplier):length(col_savgol_y)] <- col_savgol_y[length(col_savgol_y) - savgol_window_length*savgol_filter_smoothing_multiplier]
sample_tracking <- data.frame(csv$scorer, col_x, col_y,
col_savgol_x, col_savgol_y,
col_median_x, col_median_y,
col_average_x, col_average_y,
conf)
savgol_features <- extract_features(x = list(as.numeric(sample_tracking$col_savgol_x), as.numeric(sample_tracking$col_savgol_y)),
parameters = params, diagnostics = TRUE)
savgol_features <- extract_features(x = as.numeric(sample_tracking$col_savgol_x), y = as.numeric(sample_tracking$col_savgol_y),
parameters = params, diagnostics = TRUE)
plot(savgol_features)
plot(savgol_features)
savgol_features <- extract_features(x = as.vector(as.numeric(sample_tracking$col_savgol_x)), y = as.numeric(sample_tracking$col_savgol_y),
parameters = params, diagnostics = TRUE)
plot(savgol_features)
x = as.vector(as.numeric(sample_tracking$col_savgol_x))
y = as.vector(as.numeric(sample_tracking$col_savgol_y))
savgol_features <- extract_features(x = x, y = y,
parameters = params, diagnostics = TRUE)
plot(savgol_features)
x = col_x
y = col_y
plot(col_features)
col_features <- extract_features(x = col_x, y = col_y,
parameters = params, diagnostics = TRUE)
plot(col_features)
fixed_baseline = 0.1
y_threshold = 0.1
plot_univariate_projection(csv_or_path = "/Volumes/Simon_D2/LH x CP Experiments/Experiment 1 Data (LH)/PAWS-Analysis/CSVs/Baseline_LP_6099_R.csv",
manual_scale_factor = NA, p_cutoff = 0.2, filter = "savitzky-golay",
body_part = "center", reference_distance = 40, fps = 2000, savgol_window_length = 11,
savgol_filter_smoothing_multiplier = 3,
median_window_length = 11, average_window_length = 11,
shake_threshold = 0.35, window_threshold = 0.5,
fixed_baseline = 0.1, y_threshold = 0.1)
plot_univariate_projection(csv_or_path = "/Volumes/Simon_D2/LH x CP Experiments/Experiment 1 Data (LH)/PAWS-Analysis/CSVs/Baseline_LP_6099_R.csv",
manual_scale_factor = NA, p_cutoff = 0.2, filter = "savitzky-golay",
body_part = "center", reference_distance = 40, fps = 2000, savgol_window_length = 11,
savgol_filter_smoothing_multiplier = 3,
median_window_length = 11, average_window_length = 11,
shake_threshold = 0.35, window_threshold = 0.5,
fixed_baseline = 0, y_threshold = 0)
plot_univariate_projection(csv_or_path = "/Volumes/Simon_D2/LH x CP Experiments/Experiment 1 Data (LH)/PAWS-Analysis/CSVs/Baseline_LP_6099_R.csv",
manual_scale_factor = NA, p_cutoff = 0.2, filter = "savitzky-golay",
body_part = "center", reference_distance = 40, fps = 2000, savgol_window_length = 11,
savgol_filter_smoothing_multiplier = 1,
median_window_length = 11, average_window_length = 11,
shake_threshold = 0.35, window_threshold = 0.5,
fixed_baseline = 0, y_threshold = 0)
plot_univariate_projection(csv_or_path = "/Volumes/Simon_D2/LH x CP Experiments/Experiment 1 Data (LH)/PAWS-Analysis/CSVs/Baseline_LP_6099_R.csv",
manual_scale_factor = NA, p_cutoff = 0.2, filter = "savitzky-golay",
body_part = "center", reference_distance = 40, fps = 2000, savgol_window_length = 13,
savgol_filter_smoothing_multiplier = 1,
median_window_length = 11, average_window_length = 11,
shake_threshold = 0.35, window_threshold = 0.5,
fixed_baseline = 0, y_threshold = 0)
plot_univariate_projection(csv_or_path = "/Volumes/Simon_D2/LH x CP Experiments/Experiment 1 Data (LH)/PAWS-Analysis/CSVs/Baseline_LP_6099_R.csv",
manual_scale_factor = NA, p_cutoff = 0, filter = "savitzky-golay",
body_part = "center", reference_distance = 40, fps = 2000, savgol_window_length = 13,
savgol_filter_smoothing_multiplier = 1,
median_window_length = 11, average_window_length = 11,
shake_threshold = 0.35, window_threshold = 0.5,
fixed_baseline = 0, y_threshold = 0)
plot_univariate_projection(csv_or_path = "/Volumes/Simon_D2/LH x CP Experiments/Experiment 1 Data (LH)/PAWS-Analysis/CSVs/Baseline_LP_6099_R.csv",
manual_scale_factor = NA, p_cutoff = 0, filter = "savitzky-golay",
body_part = "center", reference_distance = 40, fps = 2000, savgol_window_length = 13,
savgol_filter_smoothing_multiplier = 3,
median_window_length = 11, average_window_length = 11,
shake_threshold = 0.35, window_threshold = 0.5,
fixed_baseline = 0, y_threshold = 0)
params
raw_features <- extract_features(x = sample_tracking$col_x, y = sample_tracking$col_y,
parameters = set_parameters(
fixed.baseline = list(y = fixed_baseline, threshold = y_threshold),
based.on = params), diagnostics = TRUE)
plot(raw_features)
devtools::load_all()
paws_dashboard()
roxygen2::roxygenize()
library(devtoo,s)
library(devtools)
devtools::load_all()
remove.packages("pawscor3e")
remove.packages("pawscore")
install.packages("pawscore")
install.packages("pawscore")
devtools::load_all()
paws_dashboard()
library(PAWS)
lp_manual_stim <- system.file("extdata", "Example_6J_female_lp_manual.csv", package = "PAWS")
lp_arm_stim <- system.file("extdata", "Example_6J_female_lp_arm.csv", package = "PAWS")
plot_filter_graphs(csv_or_path = lp_manual_stim,
p_cutoff = 0,
reference_distance = 40,
manual_scale_factor = NA,
fps = 2000,
savgol_window_length = 25,
median_window_length = 25,
average_window_length = 25,
fixed_baseline = 1,
y_threshold = 0.1,
body_part = "center",
axis = "y")
plot_filter_graphs(csv_or_path = lp_arm_stim,
p_cutoff = 0,
reference_distance = 40,
manual_scale_factor = NA,
fps = 2000,
savgol_window_length = 11,
median_window_length = 11,
average_window_length = 11,
fixed_baseline = 1,
y_threshold = 0.1,
body_part = "center",
axis = "y")
plot_filter_graphs(csv_or_path = lp_arm_stim,
p_cutoff = 0,
reference_distance = 40,
manual_scale_factor = NA,
fps = 2000,
savgol_window_length = 11,
median_window_length = 11,
average_window_length = 11,
fixed_baseline = 1,
y_threshold = 0.1,
body_part = "center",
axis = "y")
plot_filter_graphs(csv_or_path = lp_arm_stim,
p_cutoff = 0.80,
reference_distance = 40,
manual_scale_factor = NA,
fps = 2000,
savgol_window_length = 11,
median_window_length = 11,
average_window_length = 11,
fixed_baseline = 1,
y_threshold = 0.1,
body_part = "center",
axis = "y")
plot_univariate_projection(csv_or_path = lp_arm_stim,
p_cutoff = 0.8,
reference_distance = 40,
manual_scale_factor = NA,
filter = "average",
fps = 2000,
average_window_length = 11,
fixed_baseline = 1,
y_threshold = 0.1,
body_part = "center")
plot_univariate_projection(csv_or_path = lp_arm_stim,
p_cutoff = 0,
reference_distance = 40,
manual_scale_factor = NA,
filter = "none",
fps = 2000,
body_part = "center",
fixed_baseline = 1,
y_threshold = 0.1,
shake_threshold = 0.35)
toe <- mini_paws(
csv_or_path = lp_arm_stim, p_cutoff = 0,
reference_distance = 40, manual_scale_factor = NA,
filter = "average", average_window_length = 11,
fixed_baseline = 1,
y_threshold = 0.1,
fps = 2000, body_part = "toe"
)
center <- mini_paws(
csv_or_path = lp_arm_stim, p_cutoff = 0,
reference_distance = 40, manual_scale_factor = NA,
filter = "average", average_window_length = 11,
fixed_baseline = 1,
y_threshold = 0.1,
fps = 2000, body_part = "center"
)
heel <- mini_paws(
csv_or_path = lp_arm_stim, p_cutoff = 0,
reference_distance = 40, manual_scale_factor = NA,
filter = "average", average_window_length = 11,
fixed_baseline = 1,
y_threshold = 0.1,
fps = 2000, body_part = "heel"
)
lp_arm_manual <- rbind(toe, center, heel)
row.names(lp_arm_manual) <- c("toe", "center", "heel")
lp_arm_manual
gitcreds::gitcreds_set()
library(tidyverse)
library(PAWS)
save_path <- "/Users/Simon/Desktop"
raw <- read.csv("/Volumes/Simon_D2/LH x CP Experiments/Experiment 1 Data (LH)/PAWS-Analysis/results_8_4_23/PAWS_Results.csv")
body_part_of_interest <- "center"
raw <- raw %>%
rowwise() %>%
filter(body_part == body_part_of_interest) %>%
mutate(assign = case_when(grepl(6095, file) | grepl(6099, file) | grepl(7001, file) | grepl(7002, file) | grepl(7009, file) | grepl(7015, file) | grepl(7016, file) ~ "Naive",
grepl(7018, file) | grepl(7038, file) | grepl(7041, file) | grepl(7042, file) | grepl(7021, file) | grepl(7023, file) | grepl(7030, file) | grepl(7031, file) ~ "Context",
grepl(7032, file) | grepl(7043, file) | grepl(7044, file) | grepl(7045, file) | grepl(7053, file) | grepl(7059, file) | grepl(7065, file) | grepl(7071, file) | grepl(7072, file) | grepl(7074, file) ~ "Shock"))
raw$stimulus <- factor(tolower(raw$stimulus), levels = c("cb", "db", "lp", "hp"))
raw$stimulus <- recode(raw$stimulus, cb = "Cotton swab", db = "Dynamic brush",
lp = "Light pinprick", hp = "Heavy pinprick")
raw$group <- factor(raw$group, levels = c("Baseline", "D+4", "D+11", "D+18"))
raw$assign <- factor(raw$assign, levels = c("Naive", "Context", "Shock"))
raw$body_part <- factor(raw$body_part, levels = c("heel", "center", "toe"))
group.colors <- c(Naive = "lavender", Context = "#F0B0FF", `Shock` = "purple")
raw <- raw[,c(1,18,2:17)]
raw <- arrange(raw, group, stimulus, assign, body_part)
raw <- raw %>%
rowwise() %>%
mutate(mouse = strsplit(file, split = "_")[[seq(1, length(strsplit(file, split = "_")), 3)]][3])
raw$mouse <- factor(raw$mouse, levels = c("6095", "6099", "7001", "7002", "7009", "7015", "7016",
"7018", "7038", "7041", "7042", "7021", "7023", "7030", "7031",
"7032", "7043", "7044", "7045", "7053", "7059", "7065", "7071", "7072", "7074"))
#prismable file - pre-peak pain
pre.pain <- raw %>%
select(group, mouse, stimulus, pre.pain_score) %>%
pivot_wider(names_from = mouse, values_from = pre.pain_score, names_expand = TRUE)
pre.pain <- arrange(pre.pain, stimulus, group)
# post-peak pain
post.pain <- raw %>%
select(group, mouse, stimulus, post.pain_score) %>%
pivot_wider(names_from = mouse, values_from = post.pain_score, names_expand = TRUE)
post.pain <- arrange(post.pain, stimulus, group)
# guard duration
guard.duration <- raw %>%
select(group, mouse, stimulus, post.guarding_duration) %>%
pivot_wider(names_from = mouse, values_from = post.guarding_duration, names_expand = TRUE)
guard.duration <- arrange(guard.duration, stimulus, group)
# write.csv(pre.pain, file = file.path(save_path, "/pre_pain_prism.csv"))
# write.csv(post.pain, file = file.path(save_path, "/post_pain_prism.csv"))
# write.csv(guard.duration, file = file.path(save_path, "/guard_duration_prism.csv"))
save_path <- "/Users/Simon/Desktop"
raw <- read.csv("/Volumes/Simon_D2/LH x CP Experiments/Experiment 1 Data (LH)/PAWS-Analysis/results_8_4_23/PAWS_Results.csv")
body_part_of_interest <- "center"
raw <- raw %>%
rowwise() %>%
filter(body_part == body_part_of_interest) %>%
mutate(assign = case_when(grepl(6095, file) | grepl(6099, file) | grepl(7001, file) | grepl(7002, file) | grepl(7009, file) | grepl(7015, file) | grepl(7016, file) ~ "Naive",
grepl(7018, file) | grepl(7038, file) | grepl(7041, file) | grepl(7042, file) | grepl(7021, file) | grepl(7023, file) | grepl(7030, file) | grepl(7031, file) ~ "Context",
grepl(7032, file) | grepl(7043, file) | grepl(7044, file) | grepl(7045, file) | grepl(7053, file) | grepl(7059, file) | grepl(7065, file) | grepl(7071, file) | grepl(7072, file) | grepl(7074, file) ~ "Shock"))
raw$stimulus <- factor(tolower(raw$stimulus), levels = c("cb", "db", "lp", "hp"))
raw$stimulus <- recode(raw$stimulus, cb = "Cotton swab", db = "Dynamic brush",
lp = "Light pinprick", hp = "Heavy pinprick")
raw$group <- factor(raw$group, levels = c("Baseline", "D+4", "D+11", "D+18"))
raw$assign <- factor(raw$assign, levels = c("Naive", "Context", "Shock"))
raw$body_part <- factor(raw$body_part, levels = c("heel", "center", "toe"))
group.colors <- c(Naive = "lavender", Context = "#F0B0FF", `Shock` = "purple")
raw <- raw[,c(1,18,2:17)]
raw <- arrange(raw, group, stimulus, assign, body_part)
raw <- raw %>%
rowwise() %>%
mutate(mouse = strsplit(file, split = "_")[[seq(1, length(strsplit(file, split = "_")), 3)]][3])
raw$mouse <- factor(raw$mouse, levels = c("6095", "6099", "7001", "7002", "7009", "7015", "7016",
"7018", "7038", "7041", "7042", "7021", "7023", "7030", "7031",
"7032", "7043", "7044", "7045", "7053", "7059", "7065", "7071", "7072", "7074"))
#prismable file - pre-peak pain
pre.pain <- raw %>%
select(group, mouse, stimulus, pre.pain_score) %>%
pivot_wider(names_from = mouse, values_from = pre.pain_score, names_expand = TRUE)
pre.pain <- arrange(pre.pain, stimulus, group)
# post-peak pain
post.pain <- raw %>%
select(group, mouse, stimulus, post.pain_score) %>%
pivot_wider(names_from = mouse, values_from = post.pain_score, names_expand = TRUE)
post.pain <- arrange(post.pain, stimulus, group)
# guard duration
guard.duration <- raw %>%
select(group, mouse, stimulus, post.guarding_duration) %>%
pivot_wider(names_from = mouse, values_from = post.guarding_duration, names_expand = TRUE)
guard.duration <- arrange(guard.duration, stimulus, group)
write.csv(pre.pain, file = file.path(save_path, "/pre_pain_prism.csv"))
# write.csv(post.pain, file = file.path(save_path, "/post_pain_prism.csv"))
# write.csv(guard.duration, file = file.path(save_path, "/guard_duration_prism.csv"))
pre.pain.z <- pre.pain
z.subset <- pre.pain.z[3:length(pre.pain.z)]
z.subset[1,] <- z.subset[1,] / z.subset[1,]
z.subset[2,] <- (z.subset[2,] / z.subset[1,]) - 1
z.subset[3,] <- (z.subset[3,] / z.subset[1,]) - 1
z.subset[4,] <- (z.subset[4,] / z.subset[1,]) - 1
z.subset[1,] <-  0
z.subset[5,] <- z.subset[5,] / z.subset[5,]
z.subset[6,] <- (z.subset[6,] / z.subset[5,]) - 1
z.subset[7,] <- (z.subset[7,] / z.subset[5,]) - 1
z.subset[8,] <- (z.subset[8,] / z.subset[5,]) - 1
z.subset[5,] <-  0
z.subset[9,] <- z.subset[9,] / z.subset[9,]
z.subset[10,] <- (z.subset[10,] / z.subset[9,]) - 1
z.subset[11,] <- (z.subset[11,] / z.subset[9,]) - 1
z.subset[12,] <- (z.subset[12,] / z.subset[9,]) - 1
z.subset[9,] <-  0
z.subset[13,] <- z.subset[13,] / z.subset[13,]
z.subset[14,] <- (z.subset[14,] / z.subset[13,]) - 1
z.subset[15,] <- (z.subset[15,] / z.subset[13,]) - 1
z.subset[16,] <- (z.subset[16,] / z.subset[13,]) - 1
z.subset[13,] <-  0
pre.pain.z[3:length(pre.pain.z)] <- z.subset
write.csv(pre.pain.z, file = file.path(save_path, "/pre_pain_fold_prism.csv"))
library(PAWS)
paws_dashboard()
csv <- read.csv("/Volumes/Simon_D2/LH x CP Experiments/Experiment 2 Data (CFC)/CFC Pilot/09292023_CFC_D3_test_SO/freeze_09292023_CFC_D3_test_SO.csv")
csv
?read.csv
csv <- read.csv("/Volumes/Simon_D2/LH x CP Experiments/Experiment 2 Data (CFC)/CFC Pilot/09292023_CFC_D3_test_SO/freeze_09292023_CFC_D3_test_SO.csv",
header = TRUE)
csv
csv[2]
csv[1:]
csv[1:4]
csv[1:4. 2:5]
csv[1:4, 2:5]
csv[1:4, 2:4]
View(csv)
View(csv)
csv[1:4,]
csv[,1]
csv[1,]
names(csv) <- csv[1,]
csv
csv[1:4]
csv[1:4,]
csv[1:4, 2:4]
csv[2:4, 1:4]
csv[2:5, 1:4]
csv[2:4, 1:4]
csv[3:4, 1:4]
csv <- csv[3:4, 1:4]
library(ggplot2)
library(dplyr)
library(ggprism)
csv
library(tidyverse)
?pivot_longer
plot_csv <- pivot_longer(csv, cols = c("0", "60", "120"))
View(plot_csv)
plot_csv <- pivot_longer(csv, cols = c("0", "60", "120"), names_to = "Interval", values_to = "Freezing Percentage (%)")
plot_csv <- pivot_longer(csv, cols = c("0", "60", "120"), names_to = "interval", values_to = "freezing_percentage")
ggplot(data = plot_csv) +
geom_point(mapping = aes(x = interval, y = freezing_percentage, color = "Onset"))
ggplot(data = plot_csv) +
geom_point(mapping = aes(x = interval, y = freezing_percentage, color = Onset))
ggplot(data = plot_csv) +
geom_point(mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
labs(x = "Time (sec)",
y = "Freezing (%)")
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
geom_point() +
geom_line() +
labs(x = "Time (sec)",
y = "Freezing (%)")
ggplot(data = plot_csv) +
geom_point(mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
geom_line(mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
labs(x = "Time (sec)",
y = "Freezing (%)")
ggplot(data = plot_csv) +
geom_point(mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
geom_line(mapping = aes(x = interval, y = freezing_percentage)) +
labs(x = "Time (sec)",
y = "Freezing (%)")
View(csv)
ggplot(data = plot_csv) +
geom_point(mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
geom_line(mapping = aes(x = interval, y = freezing_percentage, group = Onset)) +
labs(x = "Time (sec)",
y = "Freezing (%)")
ggplot(data = plot_csv) +
geom_point(mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
geom_line(mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
labs(x = "Time (sec)",
y = "Freezing (%)")
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
geom_point() +
geom_line(group = Onset)) +
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
geom_point() +
geom_line(group = Onset) +
labs(x = "Time (sec)",
y = "Freezing (%)")
plot_csv <- pivot_longer(csv, cols = c("0", "60", "120"), names_to = "interval", values_to = "freezing_percentage")
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset)) +
geom_point() +
geom_line(group = Onset) +
labs(x = "Time (sec)",
y = "Freezing (%)")
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point() +
geom_line() +
labs(x = "Time (sec)",
y = "Freezing (%)")
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point() +
geom_line() +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism()
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point() +
geom_line(aes(width = 4)) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism()
?theme_prism
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point() +
geom_line() +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12,
base_line_size = 2)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point() +
geom_line() +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point() +
geom_line(width = 4) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(aes(size = 4)) +
geom_line(aes(size = 6)) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(aes(size = 4)) +
geom_line(aes(linewidth = 2)) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(aes(size = 4)) +
geom_line(aes(linewidth = 1)) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(aes(size = 4)) +
geom_line(aes(linewidth = 0.2)) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(aes(size = 4)) +
geom_line(aes(linewidth = 5)) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(aes(size = 2)) +
geom_line(aes(linewidth = 5)) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(size = 2) +
geom_line(aes(linewidth = 5)) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(size = 2) +
geom_line(linewidth = 5) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(size = 2) +
geom_line(linewidth = 2) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(size = 1.2) +
geom_line(linewidth = 2) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(size = 2) +
geom_line(linewidth = 1.2) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
View(csv)
raw_csv <- read.csv("/Volumes/Simon_D2/LH x CP Experiments/Experiment 2 Data (CFC)/CFC Pilot/09292023_CFC_D3_test_SO/freeze_09292023_CFC_D3_test_SO.csv",
header = TRUE)
names(raw_csv) <- raw_csv[1,]
csv <- raw_csv[3:4, 1:4]
plot_csv <- pivot_longer(csv, cols = c("0", "60", "120"), names_to = "interval", values_to = "freezing_percentage")
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(size = 2) +
geom_line(linewidth = 1.2) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
plot_csv$interval <- factor(plot_csv$interval, levels = c(0, 60, 120))
ggplot(data = plot_csv, mapping = aes(x = interval, y = freezing_percentage, color = Onset, group = Onset)) +
geom_point(size = 2) +
geom_line(linewidth = 1.2) +
labs(x = "Time (sec)",
y = "Freezing (%)") +
theme_prism(base_size = 12)
